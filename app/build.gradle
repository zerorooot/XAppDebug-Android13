apply plugin: 'com.android.application'
apply plugin: 'dev.rikka.tools.refine.gradle-plugin'

if (file('signing.gradle').exists()) {
    apply from: 'signing.gradle'
} else {
    println 'signing.gradle is missing'
}

android {
    dataBinding {
        enabled true
    }
    compileSdkVersion 33
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "tw.idv.palatis.xappdebug"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 100006
        versionName "1.0.6"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        project.ext.set("archivesBaseName", applicationId + "-" + versionName + "-" + versionCode)
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-dbg"
        }
        release {
//            signingConfig signingConfigs.release
//            aaptOptions.cruncherEnabled = true
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

android.applicationVariants.all { variant ->
    def version
    if (variant.versionName != null && !variant.versionName.isEmpty())
        version = "${variant.versionName}-${variant.versionCode}"
    else
        version = "${variant.versionCode}"

    def archiveBuildTask = tasks.create(
            name: "archive${variant.name.capitalize()}Apk",
            type: Copy,
            dependsOn: variant.assemble,
    ) {
        group 'archive'
        description "Assembles and archives apk and its proguard mapping for the ${variant.name.capitalize()} build"

        variant.outputs.all { output ->
            from output.outputFile.path
            rename "${output.outputFile.name}", "${applicationId}-${version}-${output.outputFile.name}"
        }
        if (variant.mappingFile != null) {
            from variant.mappingFile.path
            rename "${variant.mappingFile.name}", "${applicationId}-${version}-${variant.mappingFile.name}"
        }

        into "${rootDir}/archive/${project.name}/"
    }
    variant.assemble.finalizedBy archiveBuildTask
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    compileOnly project(':hiddenapi-stubs')
    implementation("dev.rikka.tools.refine:runtime:3.0.3")

    implementation "com.google.android.material:material:1.4.0-alpha02"
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01'
    implementation 'androidx.preference:preference:1.1.1'
    implementation "androidx.constraintlayout:constraintlayout:2.1.0-beta01"
    implementation "androidx.navigation:navigation-fragment:2.3.5"
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}